# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Build Operator Bundle
on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'docs/'
      - 'examples/'
  push:
    paths-ignore:
      - 'README.md'
      - 'docs/'
      - 'examples/'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2.1.4
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Get dependencies
      run: |
        go mod download

    - name: Operator Generators
      run: |
        make generate && make manifests

    - name: Run go fmt against code
      run: |
        go fmt ./...

    - name: Run go vet against code
      run: |
        go vet ./...

  # Build the operator in a container
  build-operator:
    name: Build Operator
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: test
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          quay.io/polyglotsystems/certificate-sentinel-operator
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Login to Quay
      uses: docker/login-action@v1 
      with:
        registry: quay.io
        username: "${{ secrets.REGISTRY_USERNAME }}"
        password: "${{ secrets.REGISTRY_TOKEN }}"

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # Build the operator bundle in a container
  build-operator-bundle:
    name: Build Operator Bundle
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [test, build-operator]
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Setup the Operator SDK
      run: |
        mkdir -p $GITHUB_WORKSPACE/bin
        curl -sSLk https://github.com/operator-framework/operator-sdk/releases/download/v1.12.0/operator-sdk_linux_amd64 -o $GITHUB_WORKSPACE/bin/operator-sdk
        chmod +x $GITHUB_WORKSPACE/bin/operator-sdk
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          quay.io/polyglotsystems/certificate-sentinel-operator-bundle
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Login to Quay
      uses: docker/login-action@v1 
      with:
        registry: quay.io
        username: "${{ secrets.REGISTRY_USERNAME }}"
        password: "${{ secrets.REGISTRY_TOKEN }}"

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        file: bundle.Dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}